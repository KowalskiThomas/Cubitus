language: cpp
os: linux
dist: xenial

branches:
  only:
  - master

# env:
#   - ARCH=x86_64 DOCKER_IMAGE=amd64/ubuntu:trusty
#   - ARCH=i686 DOCKER_IMAGE=i386/ubuntu:trusty

jobs:
  fast_finish: true
  include:
  - compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
    env: COMPILER=g++-5 CXX=g++-5
  - compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.8
        packages:
        - clang-3.8
    env: COMPILER=clang++-3.8

before_install:
- sudo apt-get update -qq
- sudo apt-get --force-yes install build-essential git-core cmake libsqlite3-dev qt5-default qttools5-dev-tools libsqlcipher-dev qtbase5-dev libqt5scintilla2-dev libqcustomplot-dev qttools5-dev


install:
- if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
- if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.8" CC="clang-3.8"; fi

script:
- mkdir release
- cd release
- cmake -DCMAKE_BUILD_TYPE=Release ..
- make
# - chmod a+x linuxdeployqt-6-x86_64.AppImage
# - export VERSION=$(printf "`master`-`git rev-list HEAD --count`-` git -C . rev-parse --short HEAD`")    #$(git rev-parse --short HEAD) # linuxdeployqt uses this for naming the file
# - ./linuxdeployqt-6-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage

# after_success:
#   - find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
#   - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
#   - bash upload.sh DB_Browser_for_SQLite*.AppImage*

# notifications:
#   email:
#    recipients:
#    on_success: never
#    on_failure: always
#   slack:
#    secure: ax5bu7ySF+wlG0pCmQqyzvaurzQt2yLnp/u4KajyFCgWZKOwcvElndjhvW8bIRNgWrGP8TVPkosHhwGucFQNjJq5hHJIbuPzfBTIbITCVbKJNRqeqL0QXlKLwMTejX9AUYwzzJ3xTTj8rZn/UMocsiCy7uPuK1v/5BhZfEr3BBU=
